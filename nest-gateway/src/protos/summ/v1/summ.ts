// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               unknown
// source: summ/v1/summ.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "summ.v1";

export interface SumRequest {
  a: number;
  b: number;
}

export interface SumResponse {
  result: number;
}

export const SUMM_V1_PACKAGE_NAME = "summ.v1";

export interface SummServiceClient {
  Sum(request: SumRequest): Observable<SumResponse>;
}

export interface SummServiceController {
  Sum(request: SumRequest): Promise<SumResponse> | Observable<SumResponse> | SumResponse;
}

export function SummServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["Sum"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("SummService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("SummService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const SUMM_SERVICE_NAME = "SummService";
